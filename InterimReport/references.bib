@misc{markoff_2010, title={Google Cars Drive Themselves, in Traffic}, url={https://www.nytimes.com/2010/10/10/science/10google.html}, journal={The New York Times}, publisher={The New York Times}, author={Markoff, John}, year={2010}, month={Oct}}

% Report
@online{teslaSelf, 
    title={Autopilot}, 
    url={https://www.tesla.com/autopilot},
    author={{Tesla}}, 
    year={2021}, 
    addendum = "(accessed: 31.01.2021)",
}



% Report
@online{studentGuideline, 
    title={Project Guide}, 
    url={https://intranet.ee.ic.ac.uk/t.clarke/projects/general/Project\%20Guide.pdf},
    author={Tom Clarke}, 
    year={2020}, 
    month={Oct},
    addendum = "(accessed: 25.01.2021)",
}


%% 4DV-SIM
@online{4dv-simulator, 
    title={4D Virtualiz - Robotics Simulator}, 
    url={https://www.4d-virtualiz.com/robotics-simulator},
    journal={4DV - Simulator},
    author={{4D-Virtualiz}}, 
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 25.01.2021)",
}


%% AirSim
@online{AirSim_Website, 
    title={{Welcome to AirSim}}, 
    url={https://microsoft.github.io/AirSim},
    author={{Air Sim}},
    publisher={Microsoft Open Source}, 
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 26.01.2021)",
}

%% Apollo
@online{Apollo_Website, 
    title={{Github - Apollo Simulator}}, 
    url={https://github.com/ApolloAuto/apollo},
    author={{ApolloAuto}},
    publisher={{ApolloAuto}}, 
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 26.01.2021)",
}

%% Autoware
@online{Autoware_doc_Website, 
    title={{Gitlab - Autoware Documentation}}, 
    url={https://autowarefoundation.gitlab.io/autoware.auto/AutowareAuto},
    author={{The Autoware Foundation}},
    publisher={{AutowareAuto}}, 
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 26.01.2021)",
}



@inproceedings{CarlaPaper,
  title = { {CARLA}: {An} Open Urban Driving Simulator},
  author = {Alexey Dosovitskiy and German Ros and Felipe Codevilla and Antonio Lopez and Vladlen Koltun},
  booktitle = {Proceedings of the 1st Annual Conference on Robot Learning},
  pages = {1--16},
  year = {2017}
}


%% DeepDrive
@online{DeepDrive_Website, 
    title={{DeepDrive Website}}, 
    url={https://deepdrive.voyage.auto/},
    author={{Voyage Deepdrive}},
    publisher={{Voyage Deepdrive}}, 
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 27.01.2021)",
}

%% Gazebo
@online{Gazebo_Website, 
    title={{Gazebo Website}}, 
    url={http://gazebosim.org},
    author={{Open Source Robotics Foundation}},
    year={2014}, 
    addendum = "(accessed: 01.02.2021)",
}

%% LPZRobots
@Inbook{LPZRobots_book,
author="Der, Ralf
and Martius, Georg",
title="The LpzRobots Simulator",
bookTitle="The Playful Machine: Theoretical Foundation and Practical Realization of Self-Organizing Robots",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="293--308",
abstract="In this chapter we describe our robot simulator. We start with the overall structure of the software package containing the controller framework, the physics simulator and external tools. The controller framework makes it very easy to develop and test our algorithms, be it in simulations or with real robots. The physics simulator can handle rigid bodies with fixed geometric representation that are connected by actuated joints. Particular efforts have been undertaken to develop an elaborated treatment of physical object interactions including friction, elasticity, and slip. The chapter also briefly discusses the generation of virtual creatures, the user interface and the most important features of the LpzRobots simulation environment.",
isbn="978-3-642-20253-7",
doi="10.1007/978-3-642-20253-7_16",
url="https://doi.org/10.1007/978-3-642-20253-7_16"
}

%% LPZRobots
@online{LPZRobots_Website, 
    title={{LPZRobots Github}}, 
    url={https://github.com/georgmartius/lpzrobots},
    author={{Der, Ralf and Martius, Georg}},
    publisher={{LPZRobots}}, 
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 27.01.2021)",
}

%% LGSVL 
@online{LGSVL_Web, 
    title={{LGSVL Simulator}}, 
    url={https://www.lgsvlsimulator.com/about},
    author={{LG Electronics America R&D Center}},
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 31.01.2021)",
}


%% Marilou 
@online{Marilou_Web, 
    title={{Marilou Simulator}}, 
    url={http://www.anykode.com/index.php},
    author={{AnyKode}},
    publisher={{AnyKode}}, 
    year={2019}, 
    addendum = "(accessed: 31.01.2021)",
}


%% Image Space Inc 
@online{ISIMotor, 
    title={{ISI Motor Software Engine}}, 
    url={https://imagespaceinc.com},
    author={{Image Space Inc}},
    year={2021}, 
    addendum = "(accessed: 31.01.2021)",
}

%% rFpro 
@online{rFpro_Web, 
    title={{Driving Simulation}}, 
    url={https://www.rfpro.com/driving-simulation},
    author={{rFpro}},
    publisher={{rFpro}}, 
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 31.01.2021)",
}

%% rFpro 
@online{rFpro_ML, 
    title={{Supervised Learning Autonomous Driving}}, 
    url={https://www.rfpro.com/virtual-test/dlad-deep-learning-autonomous-driving},
    author={{rFpro}},
    publisher={{rFpro}}, 
    year={2021}, 
    month={Jan},
    addendum = "(accessed: 31.01.2021)",
}

%% TORCS 
@online{TORCS_Racing, 
    title={{TORCS Competition}}, 
    url={http://www.berniw.org/trb/events/eventlist.php},
    author={{The TORCS racing board}},
    year={2017}, 
    addendum = "(accessed: 31.01.2021)",
}


%% Webots 
@online{Webots_Github, 
    title={{Webots Github}}, 
    url={https://github.com/cyberbotics/webots/tree/released},
    author={{Cyberbotics}},
    year={2021},
    month={Jan},
    addendum = "(accessed: 01.02.2021)",
}
% Webots 
@online{Webots_home, 
    title={{Cyberbotics}}, 
    url={https://cyberbotics.com},
    author={{Cyberbotics}},
    year={2021},
    month={Jan},
    addendum = "(accessed: 01.02.2021)",
}


@book{millington2007game,
  title={Game physics engine development},
  author={Millington, Ian},
  year={2007},
  publisher={CRC Press},
  url="https://books.google.no/books?id=d0NZDwAAQBAJ&lpg=PP1&ots=2LlCAMdy58&dq=Physics\%20engine\&lr\&hl=no\&pg=PP1\#v=onepage\&q=Physics\%20engine\&f=false"
}


%% PhysX book
@inproceedings{Martinez-FrancoJuanC2018PAAM,
issn = {1558-4305},
abstract = {The Container Loading Problem (CLP) is an optimization challenge where the constraint of dynamic stability plays a significant role. The evaluation of dynamic stability requires the use of dynamic simulations that are carried out either with dedicated simulation software that produces very small errors at the expense of simulation speed, or real-time physics engines that complete simulations in a very short time at the cost of repeatability. One such engine, PhysX, is evaluated to determine the feasibility of its integration with the open source application PackageCargo. A simulation tool based on PhysX is proposed and compared with the dynamic simulation environment of Autodesk Inventor to verify its reliability. The simulation tool presents a dynamically accurate representation of the physical phenomena experienced by cargo during transportation, making it a viable option for the evaluation of dynamic stability in solutions to the CLP.},
pages = {2933--2940},
publisher = {IEEE},
booktitle = {2018 Winter Simulation Conference (WSC)},
isbn = {9781538665725},
year = {2018},
title = {PHYSX AS A MIDDLEWARE FOR DYNAMIC SIMULATIONS IN THE CONTAINER LOADING PROBLEM},
language = {eng},
author = {Martinez-Franco, Juan C and Alvarez-Martinez, David},
keywords = {Containers ; Tools ; Stability analysis ; Acceleration ; Engines ; Load modeling},
}

%ODE
@article{ODEPaper,
issn = {0263-2241},
abstract = {Legged locomotion systems, especially anthropomorphic mechanisms, can be modeled by using highly complex dynamic structures. In order to model these complex dynamic structures, some assumptions must be made, such as no-friction, rigid links or non-redundancy. However, with the dynamic simulators developed in recent years, it has become possible to create dynamic models without making any assumptions. In this study, a posture control algorithm was developed to automatically balance a six-legged mobile robot against external dynamic effects such as incline or contact polygon changes. A model-based control structure is preferred in order to implement the posture control algorithm to the robot control. The reference model used in model-based control was created using the ODE (Open Dynamics Engine) physics simulator. The reference model created on the ODE is always in communication with the IMU (Inertial Measurement Unit) sensor connected to the robot's body. For this reason, all the dynamic effects including externally applied forces to the real robot can be considered in the control process without making any assumptions. Consequently, real-time application results of the six-legged mobile robot on a moving platform are observed and the results have shown better performance as depicted on graphs.},
journal = {Measurement : journal of the International Measurement Confederation},
pages = {367--377},
volume = {124},
publisher = {Elsevier Ltd},
year = {2018},
title = {ODE (Open Dynamics Engine) based stability control algorithm for six legged robot},
copyright = {2018 Elsevier Ltd},
language = {eng},
address = {London},
author = {{Yıldırım, Şahin and Arslan, Erdem}},
keywords = {Stabilization algorithm ; Model based control ; Legged robot ; Open Dynamics Engine ; Systems stability ; Automation ; Computer simulation ; Robot control ; Redundancy ; Inertial sensing devices ; Robot dynamics ; Inertial platforms ; Dynamical systems ; Locomotion ; Algorithms ; Control algorithms ; Dynamic stability ; Dynamic models ; Control stability ; Control theory ; Simulators ; Robots},
}





%% Game Engine Book
@Inbook{GameEngine_UnityGame_book,
author="Nicoll, Benjamin
and Keogh, Brendan",
title="The Unity Game Engine and the Circuits of Cultural Software",
bookTitle="The Unity Game Engine and the Circuits of Cultural Software",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="1--21",
abstract="This chapter describes the `circuits of cultural software' as a framework that guides the book and its analysis; offers a preliminary definition of game engines; and introduces the Unity game engine as the book's core case study. It also discusses key terms such as cultural software, proprietary and commercial game engines, workflow, grain, literacy, and governance, and situates the book in relation to existing research on videogame production, game engines, and software culture. It briefly discusses Unity's place in Australia's videogame industry---which is where the research for the book was conducted---and provides a chapter outline.",
isbn="978-3-030-25012-6",
doi="10.1007/978-3-030-25012-6_1",
url="https://doi.org/10.1007/978-3-030-25012-6_1"
}


%% Unreal Engine
@Inbook{UnrealEngine_Book,
author="Kumar, Abhishek",
title="Introduction to the Software",
bookTitle="VR Integrated Heritage Recreation: Using Blender and Unreal Engine 4",
year="2020",
publisher="Apress",
address="Berkeley, CA",
pages="9--13",
abstract="Let's start by taking a quick look at the software that we are going to use throughout this book. We will explore each product in more detail as we proceed through the creation process. In this chapter we will cover the basic functions of each software product and discuss where in the creation process they are used. We will also see what their initial interface looks like. In further chapters, we will explore their basic features.",
isbn="978-1-4842-6077-7",
doi="10.1007/978-1-4842-6077-7_2",
url="https://doi.org/10.1007/978-1-4842-6077-7_2"
}



%Games made in Unity
@online{GamesMadeInUnity, 
    title={{Top 10 Unity Games Ever Made}}, 
    url={https://blog.soomla.com/2015/01/top-10-unity-games-ever-made.html},
    author={Gur Dotan},
    publisher={{Soomla}}, 
    year={2015}, 
    month={Jan},
    addendum = "(accessed: 28.01.2021)",
}

%Games made in Unreal Engine
@online{GamesMadeInUnrealEngine, 
    title={{15 Great Games That Use The Unreal 4 Game Engine}}, 
    url={https://www.thegamer.com/great-games-use-unreal-4-game-engine/},
    author={Jeff Drake},
    publisher={{The Gamer}}, 
    year={2020}, 
    month={Jun},
    addendum = "(accessed: 28.01.2021)",
}

%% Unity History
@misc{Unity_arnia_software, title={{What Makes Unity So Popular in Game Development?}}, url={https://www.arnia.com/what-makes-unity-so-popular-in-game-development/}, journal={Arnia Software}, author={{Arnia Software}}}


%% Unreal Engine Automative
@misc{UnrealEngine_Automative, title={{Automotive \& Transportation}}, url={https://www.unrealengine.com/en-US/industry/automotive-transportation}, journal={{Unreal Engine}}, author={{Epic Games}}}

%% Unreal Engine Live Broadcast
@misc{UnrealEngine_LiveBroadcast, title={{Broadcast Live Events}}, url={https://www.unrealengine.com/en-US/industry/broadcast-live-events}, journal={Unreal Engine}, author={{Epic Games}}}

%Games made in Unreal Engine
@online{UE5, 
    title={{A first look at Unreal Engine 5}}, 
    url={https://www.unrealengine.com/en-US/blog/a-first-look-at-unreal-engine-5},
    author={{Epic Games}},
    year={2020}, 
    month={Jun},
    addendum = "(accessed: 28.01.2021)",
}

%MIT License
@online{MITLicense, 
    title={{The MIT License}}, 
    url={https://opensource.org/licenses/MIT},
    author={{Open Source Initiative}},
    year={2020}, 
    month={Jun},
    addendum = "(accessed: 30.01.2021)",
}

@online{UKAutoRules, 
    title={{Automated and Electric Vehicles Act 2018}}, 
    url={https://www.legislation.gov.uk/ukpga/2018/18/part/1/enacted},
    author={{UK Gov}},
    year={2018}, 
    addendum = "(accessed: 30.01.2021)",
}

https://publications.parliament.uk/pa/cm201617/cmselect/cmsctech/145/14506.htm

@online{UKAutoRulesGov2, 
    title={{Robotics and artificial intelligence}}, 
    url={https://publications.parliament.uk/pa/cm201617/cmselect/cmsctech/145/14506.htm},
    author={{UK Gov}},
    year={2016}, 
    month={Oct},
    addendum = "(accessed: 30.01.2021)",
}


@Article{Hevelke2015,
author={Hevelke, Alexander
and Nida-R{\"u}melin, Julian},
title={Responsibility for Crashes of Autonomous Vehicles: An Ethical Analysis},
journal={Science and Engineering Ethics},
year={2015},
month={Jun},
day={01},
volume={21},
number={3},
pages={619-630},
abstract={A number of companies including Google and BMW are currently working on the development of autonomous cars. But if fully autonomous cars are going to drive on our roads, it must be decided who is to be held responsible in case of accidents. This involves not only legal questions, but also moral ones. The first question discussed is whether we should try to design the tort liability for car manufacturers in a way that will help along the development and improvement of autonomous vehicles. In particular, Patrick Lin's concern that any security gain derived from the introduction of autonomous cars would constitute a trade-off in human lives will be addressed. The second question is whether it would be morally permissible to impose liability on the user based on a duty to pay attention to the road and traffic and to intervene when necessary to avoid accidents. Doubts about the moral legitimacy of such a scheme are based on the notion that it is a form of defamation if a person is held to blame for causing the death of another by his inattention if he never had a real chance to intervene. Therefore, the legitimacy of such an approach would depend on the user having an actual chance to do so. The last option discussed in this paper is a system in which a person using an autonomous vehicle has no duty (and possibly no way) of interfering, but is still held (financially, not criminally) responsible for possible accidents. Two ways of doing so are discussed, but only one is judged morally feasible.},
issn={1471-5546},
doi={10.1007/s11948-014-9565-5},
url={https://doi.org/10.1007/s11948-014-9565-5}
}


@article{EthicsIssue,
author = { Andreia   Martinho  and  Nils   Herber  and  Maarten   Kroesen  and  Caspar   Chorus },
title = {Ethical issues in focus by the autonomous vehicles industry},
journal = {Transport Reviews},
volume = {0},
number = {0},
pages = {1-22},
year  = {2021},
publisher = {Routledge},
doi = {10.1080/01441647.2020.1862355},
URL = { 
        https://doi.org/10.1080/01441647.2020.1862355
},
eprint = { 
        https://doi.org/10.1080/01441647.2020.1862355
}
}



@article{ArkinRonaldC2016EaAS,
issn = {0018-9219},
abstract = {Examines the technology of autonomous systems and explores its ethical and social implications. Artificial intelligence (AI) and its role in autonomous systems have promised everything from utopian freedom to existential dystopia. The unfilled hyperbole surrounding past and present promises regarding AI futures has left many people skeptical, afraid, or just confused. Rational discussion is often left in the wake due to the fears and fantasy evoked by the press and Hollywood. Fortunately, as a byproduct, this has resulted in a blossoming of worldwide discourse on the ethical implications of the intelligent machines we are creating. Many near and mid-term ethical concerns have arisen with the advent of autonomous systems: particularly regarding driverless cars, privacy and drones, companion- and intimate robotics, the displacement of jobs by intelligent machines, and warfighting robots among others. The IEEE Global Initiative on the Ethics of Autonomous Systems, the United Nations, the International Committee of the Red Cross, the White House, and the Future of Life Institute are among many responsible organizations that are now considering the ramifications of the real-world consequences of machine autonomy as we continue to stumble about trying to find a way forward.},
journal = {Proceedings of the IEEE},
pages = {1779--1781},
volume = {104},
publisher = {IEEE},
number = {10},
year = {2016},
title = {Ethics and Autonomous Systems: Perils and Promises [Point of View]},
language = {eng},
author = {Arkin, Ronald C},
keywords = {Ethics ; Privacy ; Social factors ; Autonomous systems ; Social implications of technology ; Artificial intelligence},
}


@article{BorensteinJason2019SCaE,
issn = {1353-3452},
abstract = {The literature on self-driving cars and ethics continues to grow. Yet much of it focuses on ethical complexities emerging from an individual vehicle. That is an important but insufficient step towards determining how the technology will impact human lives and society more generally. What must complement ongoing discussions is a broader, system level of analysis that engages with the interactions and effects that these cars will have on one another and on the socio-technical systems in which they are embedded. To bring the conversation of self-driving cars to the system level, we make use of two traffic scenarios which highlight some of the complexities that designers, policymakers, and others should consider related to the technology. We then describe three approaches that could be used to address such complexities and their associated shortcomings. We conclude by bringing attention to the “Moral Responsibility for Computing Artifacts: The Rules”, a framework that can provide insight into how to approach ethical issues related to self-driving cars.},
journal = {Science and engineering ethics},
pages = {383--398},
volume = {25},
publisher = {Springer Netherlands},
number = {2},
year = {2019},
title = {Self-Driving Cars and Engineering Ethics: The Need for a System Level Analysis},
copyright = {Springer Nature B.V. 2019},
language = {eng},
address = {Dordrecht},
author = {Borenstein, Jason and Herkert, Joseph R and Miller, Keith W},
keywords = {Ethics ; Philosophy of Science ; Automation ; Self-driving cars ; Engineering ethics ; Philosophy, general ; Socio-technical systems ; Engineering, general ; Biomedical Engineering and Bioengineering ; Medicine/Public Health, general ; Artificial intelligence ; Philosophy ; Computers ; Social Change ; Artificial Intelligence - ethics ; Humans ; Accidents, Traffic ; Automobiles - ethics ; Morals ; Engineering - ethics ; Social Responsibility ; Systems Analysis ; Automation - ethics ; Automobile Driving ; Ethical Analysis ; Technology - ethics ; Driverless cars ; Automobile driving ; Genetically modified organisms ; Genetic engineering ; Ethical aspects ; Motor vehicle driving ; Index Medicus ; Bioethics},
}


@article{moralComputers,
author = {Miller, Keith},
year = {2011},
month = {07},
pages = {57 - 59},
title = {Moral Responsibility for Computing Artifacts: The Rules},
volume = {13},
journal = {IT Professional},
doi = {10.1109/MITP.2011.46}
}



%Carla build
@online{Carlamap, 
    title={{Tutorial - Add custom map}}, 
    url={https://carla.readthedocs.io/en/latest/tuto_A_add_map},
    author={{Carla}},
    year={2021}, 
    month={Jun},
    addendum = "(accessed: 01.02.2021)",
}

@Article{Rosique2019,
author={Rosique, Francisca
and Navarro, Pedro J.
and Fern{\'a}ndez, Carlos
and Padilla, Antonio},
title={A Systematic Review of Perception System and Simulators for Autonomous Vehicles Research},
journal={Sensors (Basel, Switzerland)},
year={2019},
month={Feb},
day={05},
publisher={MDPI},
volume={19},
number={3},
pages={648},
keywords={LiDAR; autonomous vehicle; model based design; perception system; simulator},
abstract={This paper presents a systematic review of the perception systems and simulators for autonomous vehicles (AV). This work has been divided into three parts. In the first part, perception systems are categorized as environment perception systems and positioning estimation systems. The paper presents the physical fundamentals, principle functioning, and electromagnetic spectrum used to operate the most common sensors used in perception systems (ultrasonic, RADAR, LiDAR, cameras, IMU, GNSS, RTK, etc.). Furthermore, their strengths and weaknesses are shown, and the quantification of their features using spider charts will allow proper selection of different sensors depending on 11 features. In the second part, the main elements to be taken into account in the simulation of a perception system of an AV are presented. For this purpose, the paper describes simulators for model-based development, the main game engines that can be used for simulation, simulators from the robotics field, and lastly simulators used specifically for AV. Finally, the current state of regulations that are being applied in different countries around the world on issues concerning the implementation of autonomous vehicles is presented.},
note={30764486[pmid]},
note={PMC6387009[pmcid]},
note={s19030648[PII]},
issn={1424-8220},
doi={10.3390/s19030648},
url={https://pubmed.ncbi.nlm.nih.gov/30764486},
url={https://doi.org/10.3390/s19030648},
language={eng}
}


@article{EbeidEmad2018AsoO,
issn = {0141-9331},
abstract = {The current disruptive innovation in civilian drone (UAV) applications has led to an increased need for research and development in UAV technology. The key challenges currently being addressed are related to UAV platform properties such as functionality, reliability, fault tolerance, and endurance, which are all tightly linked to the UAV flight controller hardware and software. The lack of standardization of flight controller architectures and the use of proprietary closed-source flight controllers on many UAV platforms, however, complicates this work: solutions developed for one flight controller may be difficult to port to another without substantial extra development and testing. Using open-source flight controllers mitigates some of these challenges and enables other researchers to validate and build upon existing research.
This paper presents a survey of the publicly available open-source drone platform elements that can be used for research and development. The survey covers open-source hardware, software, and simulation drone platforms and compares their main features.},
journal = {Microprocessors and microsystems},
pages = {11--20},
volume = {61},
publisher = {Elsevier B.V},
year = {2018},
title = {A survey of Open-Source UAV flight controllers and flight simulators},
copyright = {2018 Elsevier B.V.},
language = {eng},
author = {Ebeid, Emad and Skriver, Martin and Terkildsen, Kristian Husum and Jensen, Kjeld and Schultz, Ulrik Pagh},
keywords = {Unmanned Aerial Vehicle (UAV) ; Survey ; Flight controllers ; Open platforms ; Drone simulators ; Drones},
}

